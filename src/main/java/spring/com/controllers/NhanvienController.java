package spring.com.controllers;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import spring.com.beans.Nhanvien;
import spring.com.dao.NhanvienDAO;

@Controller
@RequestMapping("/nhanvien")
public class NhanvienController {

    @Autowired
    private NhanvienDAO nhanvienDAO;

    // ğŸ“Œ API láº¥y danh sÃ¡ch nhÃ¢n viÃªn (JSON)
    @GetMapping("/api")
    @ResponseBody
    public List<Nhanvien> getNhanvienApi() {
        return nhanvienDAO.getAll();
    }

    // ğŸ“Œ Hiá»ƒn thá»‹ danh sÃ¡ch nhÃ¢n viÃªn (JSP)
    @GetMapping
    public String listNhanvien(Model model) {
        List<Nhanvien> ds = nhanvienDAO.getAll();
        System.out.println("Sá»‘ lÆ°á»£ng nhÃ¢n viÃªn: " + ds.size());
        model.addAttribute("listNhanvien", ds);
        return "nhanvien-list";
    }

    // ğŸ“Œ Hiá»ƒn thá»‹ form thÃªm nhÃ¢n viÃªn
    @GetMapping("/add")
    public String showAddForm(Model model) {
        model.addAttribute("nhanvien", new Nhanvien());
        return "nhanvien-form";
    }

    // ğŸ“Œ Xá»­ lÃ½ thÃªm nhÃ¢n viÃªn (cÃ³ kiá»ƒm tra lá»—i)
    @PostMapping("/save")
    public String saveNhanvien(@Validated @ModelAttribute("nhanvien") Nhanvien nhanvien, BindingResult result, RedirectAttributes redirect) {
        if (result.hasErrors()) {
            return "nhanvien-form";
        }
        try {
            nhanvienDAO.save(nhanvien);
            redirect.addFlashAttribute("message", "ThÃªm nhÃ¢n viÃªn thÃ nh cÃ´ng!");
        } catch (Exception e) {
            redirect.addFlashAttribute("error", "Lá»—i khi thÃªm nhÃ¢n viÃªn: " + e.getMessage());
        }
        return "redirect:/nhanvien";
    }
    
    // ğŸ“Œ Hiá»ƒn thá»‹ form chá»‰nh sá»­a nhÃ¢n viÃªn
    @GetMapping("/edit/{nhanvienId}")
    public String showEditForm(@PathVariable("nhanvienId") String nhanvienId, Model model, RedirectAttributes redirect) {
        Nhanvien nv = nhanvienDAO.getById(nhanvienId);
        if (nv == null) {
            redirect.addFlashAttribute("error", "KhÃ´ng tÃ¬m tháº¥y nhÃ¢n viÃªn vá»›i ID: " + nhanvienId);
            return "redirect:/nhanvien";
        }
        model.addAttribute("nhanvien", nv);
        return "nhanvien-form"; // DÃ¹ng chung form cho thÃªm vÃ  chá»‰nh sá»­a
    }
    
    // ğŸ“Œ Xá»­ lÃ½ cáº­p nháº­t nhÃ¢n viÃªn
    @PostMapping("/update")
    public String updateNhanvien(@Validated @ModelAttribute("nhanvien") Nhanvien nhanvien, BindingResult result, RedirectAttributes redirect) {
        if (result.hasErrors()) {
            return "nhanvien-form";
        }
        try {
            nhanvienDAO.update(nhanvien);
            redirect.addFlashAttribute("message", "Cáº­p nháº­t nhÃ¢n viÃªn thÃ nh cÃ´ng!");
        } catch (Exception e) {
            redirect.addFlashAttribute("error", "Lá»—i khi cáº­p nháº­t nhÃ¢n viÃªn: " + e.getMessage());
        }
        return "redirect:/nhanvien";
    }
    
    // ğŸ“Œ XÃ³a nhÃ¢n viÃªn
    @GetMapping("/delete/{nhanvienId}")
    public String deleteNhanvien(@PathVariable("nhanvienId") String nhanvienId, RedirectAttributes redirect) {
        try {
            nhanvienDAO.delete(nhanvienId);
            redirect.addFlashAttribute("message", "XÃ³a nhÃ¢n viÃªn thÃ nh cÃ´ng!");
        } catch (Exception e) {
            redirect.addFlashAttribute("error", "Lá»—i khi xÃ³a nhÃ¢n viÃªn: " + e.getMessage());
        }
        return "redirect:/nhanvien";
    }
}
