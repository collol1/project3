package spring.com.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import spring.com.beans.Luong;
import spring.com.dao.LuongDAO;

@Controller
@RequestMapping("/luong")
public class LuongController {

    @Autowired
    private LuongDAO luongDAO;

    // üìå API JSON: L·∫•y danh s√°ch l∆∞∆°ng
    @GetMapping("/api")
    @ResponseBody
    public List<Luong> getLuongApi() {
        return luongDAO.getAll();
    }

    // üìå Hi·ªÉn th·ªã danh s√°ch l∆∞∆°ng (JSP)
    @GetMapping
    public String listLuong(Model model) {
        model.addAttribute("listLuong", luongDAO.getAll());
        return "luong-list";
    }

    // üìå Hi·ªÉn th·ªã form th√™m l∆∞∆°ng
    @GetMapping("/add")
    public String showAddForm(Model model) {
        model.addAttribute("luong", new Luong());
        return "luong-form";
    }

    // üìå X·ª≠ l√Ω th√™m l∆∞∆°ng (c√≥ ki·ªÉm tra l·ªói)
    @PostMapping("/save")
    public String saveLuong(@Validated @ModelAttribute("luong") Luong luong, BindingResult result, RedirectAttributes redirect) {
        if (result.hasErrors()) {
            return "luong-form";
        }
        try {
            luongDAO.save(luong);
            redirect.addFlashAttribute("message", "Th√™m l∆∞∆°ng th√†nh c√¥ng!");
        } catch (Exception e) {
            redirect.addFlashAttribute("error", "L·ªói khi th√™m l∆∞∆°ng: " + e.getMessage());
        }
        return "redirect:/luong";
    }

    // üìå Hi·ªÉn th·ªã form ch·ªânh s·ª≠a l∆∞∆°ng
    @GetMapping("/edit/{luongId}")
    public String showEditForm(@PathVariable("luongId") String luongId, Model model, RedirectAttributes redirect) {
        Luong luong = luongDAO.getById(luongId);
        if (luong == null) {
            redirect.addFlashAttribute("error", "Kh√¥ng t√¨m th·∫•y l∆∞∆°ng v·ªõi ID: " + luongId);
            return "redirect:/luong";
        }
        model.addAttribute("luong", luong);
        return "luong-form"; // D√πng chung form cho th√™m v√† ch·ªânh s·ª≠a
    }

    // üìå X·ª≠ l√Ω c·∫≠p nh·∫≠t l∆∞∆°ng
    @PostMapping("/update")
    public String updateLuong(@Validated @ModelAttribute("luong") Luong luong, BindingResult result, RedirectAttributes redirect) {
        if (result.hasErrors()) {
            return "luong-form";
        }
        try {
            luongDAO.update(luong);
            redirect.addFlashAttribute("message", "C·∫≠p nh·∫≠t l∆∞∆°ng th√†nh c√¥ng!");
        } catch (Exception e) {
            redirect.addFlashAttribute("error", "L·ªói khi c·∫≠p nh·∫≠t l∆∞∆°ng: " + e.getMessage());
        }
        return "redirect:/luong";
    }

    // üìå X√≥a l∆∞∆°ng
    @GetMapping("/delete/{luongId}")
    public String deleteLuong(@PathVariable("luongId") String luongId, RedirectAttributes redirect) {
        try {
            luongDAO.delete(luongId);
            redirect.addFlashAttribute("message", "X√≥a l∆∞∆°ng th√†nh c√¥ng!");
        } catch (Exception e) {
            redirect.addFlashAttribute("error", "L·ªói khi x√≥a l∆∞∆°ng: " + e.getMessage());
        }
        return "redirect:/luong";
    }
}
