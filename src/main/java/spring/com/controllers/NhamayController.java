package spring.com.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import spring.com.beans.Luong;
import spring.com.beans.Nhamay;
import spring.com.dao.NhamayDAO;

@Controller
@RequestMapping("/nhamay")
public class NhamayController {

    @Autowired
    private NhamayDAO nhamayDAO;

    // üìå API JSON: L·∫•y danh s√°ch nh√† m√°y
    @GetMapping("/api")
    @ResponseBody
    public List<Nhamay> getNhamayApi() {
        return nhamayDAO.getAll();
    }

    // üìå Hi·ªÉn th·ªã danh s√°ch nh√† m√°y (JSP)
    @GetMapping
    public String listNhamay(Model model) {
        model.addAttribute("listNhamay", nhamayDAO.getAll());
        return "nhamay-list";
    }

    // üìå Hi·ªÉn th·ªã form th√™m nh√† m√°y
    @GetMapping("/add")
    public String showAddForm(Model model) {
        model.addAttribute("nhamay", new Nhamay());
        return "nhamay-form";
    }

    // üìå X·ª≠ l√Ω th√™m nh√† m√°y (c√≥ ki·ªÉm tra l·ªói)
    @PostMapping("/save")
    public String saveNhamay(@Validated @ModelAttribute("nhamay") Nhamay nhamay, BindingResult result, RedirectAttributes redirect) {
        if (result.hasErrors()) {
            return "nhamay-form";
        }
        try {
            nhamayDAO.save(nhamay);
            redirect.addFlashAttribute("message", "Th√™m nh√† m√°y th√†nh c√¥ng!");
        } catch (Exception e) {
            redirect.addFlashAttribute("error", "L·ªói khi th√™m nh√† m√°y: " + e.getMessage());
        }
        return "redirect:/nhamay";
    }

    // üìå Hi·ªÉn th·ªã form ch·ªânh s·ª≠a nh√† m√°y
    @GetMapping("/edit/{nhamayId}")
    public String showEditForm(@PathVariable("nhamayId") String nhamayId, Model model, RedirectAttributes redirect) {
        Nhamay nhamay = nhamayDAO.getById(nhamayId);
        if (nhamay == null) {
            redirect.addFlashAttribute("error", "Kh√¥ng t√¨m th·∫•y nh√† m√°y v·ªõi ID: " + nhamayId);
            return "redirect:/nhamay";
        }
        model.addAttribute("nhamay", nhamay);
        return "nhamay-form"; // S·ª≠ d·ª•ng chung form cho th√™m v√† ch·ªânh s·ª≠a
    }

    // üìå X·ª≠ l√Ω c·∫≠p nh·∫≠t nh√† m√°y
    @PostMapping("/edit/{nhamayId}")
    public String updateNhamay(@RequestParam("nhamayId") String nhamayId, 
            @ModelAttribute("nhamay") Nhamay nhamay) {
    	nhamay.setNhamayId(nhamayId); // G√°n ID t·ª´ request v√†o ƒë·ªëi t∆∞·ª£ng
    	nhamayDAO.update(nhamay);
    	return "redirect:/nhamay";
}

    // üìå X√≥a nh√† m√°y
    @GetMapping("/delete/{nhamayId}")
    public String deleteNhamay(@PathVariable("nhamayId") String nhamayId, RedirectAttributes redirect) {
        try {
            nhamayDAO.delete(nhamayId);
            redirect.addFlashAttribute("message", "X√≥a nh√† m√°y th√†nh c√¥ng!");
        } catch (Exception e) {
            redirect.addFlashAttribute("error", "L·ªói khi x√≥a nh√† m√°y: " + e.getMessage());
        }
        return "redirect:/nhamay";
    }
}
